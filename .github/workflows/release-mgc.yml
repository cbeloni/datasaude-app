name: Deploy Staging

on:
  push:
    branches:
      - release-mgc 

jobs:
  build-and-deploy:
    environment: staging
    runs-on: ubuntu-latest

    steps:     
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cbeloni
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Carregar variÃ¡veis em .env
        run: |
          echo "REACT_APP_API_URL=${{ vars.REACT_APP_API_URL }}" >> .env

      # - name: Getting enviroment 
      #   run: |
      #     cat .env.template
      #     envsubst < .env.template > .env
      #     cat .env 

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: cbeloni/datasaude-app-amd64:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_MGC }}" > ~/.kube/config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG_MGC }}      

      - name: Apply Kubernetes manifests
        run: |          
          cat .env
          kubectl create secret generic datasaude-app-env-staging --from-env-file=.env --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f datasaude-app-mgc.yaml --insecure-skip-tls-verify
          kubectl rollout restart deployment/datasaude-app --insecure-skip-tls-verify

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}